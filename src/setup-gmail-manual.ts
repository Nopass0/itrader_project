import { db } from "./db";
import { GmailClient } from "./gmail";
import { OAuth2Manager } from "./gmail/utils/oauth2";
import fs from "fs/promises";
import path from "path";
import readline from "readline";

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function question(query: string): Promise<string> {
  return new Promise(resolve => rl.question(query, resolve));
}

async function setup() {
  try {
    console.log("\n=== Gmail Setup (–†—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞) ===\n");
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª —Å credentials
    const credentialsPath = path.join("data", "gmail-credentials.json");
    try {
      await fs.access(credentialsPath);
    } catch {
      console.error("–û–®–ò–ë–ö–ê: –§–∞–π–ª gmail-credentials.json –Ω–µ –Ω–∞–π–¥–µ–Ω!");
      console.log(`–ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞: ${credentialsPath}`);
      console.log("\n–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:");
      console.log("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Google Cloud Console");
      console.log("2. –°–æ–∑–¥–∞–π—Ç–µ OAuth 2.0 Client ID (—Ç–∏–ø: Desktop)");
      console.log("3. –°–∫–∞—á–∞–π—Ç–µ JSON —Ñ–∞–π–ª");
      console.log("4. –ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ –≤ gmail-credentials.json");
      console.log("5. –ü–æ–º–µ—Å—Ç–∏—Ç–µ –≤ –ø–∞–ø–∫—É data/");
      process.exit(1);
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º credentials
    const credentialsContent = JSON.parse(await fs.readFile(credentialsPath, 'utf-8'));
    const credentials = credentialsContent.installed || credentialsContent.web || credentialsContent;

    // –°–æ–∑–¥–∞–µ–º OAuth2Manager
    const oauth2Manager = new OAuth2Manager(credentials, undefined, false);
    const authUrl = oauth2Manager.getAuthUrl();

    console.log("–®–∞–≥ 1: –û—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ (–ª—É—á—à–µ –≤ —Ä–µ–∂–∏–º–µ –∏–Ω–∫–æ–≥–Ω–∏—Ç–æ):");
    console.log("\n" + authUrl + "\n");
    
    console.log("–®–∞–≥ 2: –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç Google –∏ —Ä–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø");
    console.log("\n–®–∞–≥ 3: –ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤—ã —É–≤–∏–¥–∏—Ç–µ URL –≤–∏–¥–∞:");
    console.log("http://localhost/?code=4/0AUJR-x6PQ...&scope=...\n");
    
    console.log("–®–∞–≥ 4: –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –¢–û–õ–¨–ö–û –∫–æ–¥ (—á–∞—Å—Ç—å –º–µ–∂–¥—É 'code=' –∏ '&scope')");
    console.log("–ü—Ä–∏–º–µ—Ä: 4/0AUJR-x6PQwB0qU13ldbZXDhDKbvyqA0YgncuXu55jI8D66HlXW_QDCbgoWUOQk9RQSczzw\n");

    const code = await question("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ");

    if (!code || code.trim().length === 0) {
      console.error("\n–û–®–ò–ë–ö–ê: –ö–æ–¥ –Ω–µ –≤–≤–µ–¥–µ–Ω!");
      process.exit(1);
    }

    console.log("\n–û–±–º–µ–Ω–∏–≤–∞–µ–º –∫–æ–¥ –Ω–∞ —Ç–æ–∫–µ–Ω—ã...");
    
    try {
      const tokens = await oauth2Manager.getTokenFromCode(code.trim());

      // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –∏ –ø–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
      const client = new GmailClient(oauth2Manager);
      await client.setTokens(tokens);
      const profile = await client.getUserProfile();

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
      await db.upsertGmailAccount({
        email: profile.emailAddress || "unknown",
        refreshToken: tokens.refresh_token || "",
      });

      console.log(`\n‚úÖ –£–°–ü–ï–•! Gmail –∞–∫–∫–∞—É–Ω—Ç ${profile.emailAddress} –ø–æ–¥–∫–ª—é—á–µ–Ω!`);
      console.log("\n–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å Itrader!");
      
    } catch (error: any) {
      console.error("\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–º–µ–Ω–µ –∫–æ–¥–∞:", error.message);
      
      if (error.message && error.message.includes('invalid_grant')) {
        console.log("\nüí° –ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É 'invalid_grant':");
        console.log("1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –°–í–ï–ñ–ò–ô –∫–æ–¥ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–∞—Ä—ã–µ –∫–æ–¥—ã)");
        console.log("2. –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –≤ –ù–û–í–û–ú –æ–∫–Ω–µ –±—Ä–∞—É–∑–µ—Ä–∞ –≤ —Ä–µ–∂–∏–º–µ –∏–Ω–∫–æ–≥–Ω–∏—Ç–æ");
        console.log("3. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –ë–´–°–¢–†–û (–≤ —Ç–µ—á–µ–Ω–∏–µ 1-2 –º–∏–Ω—É—Ç)");
        console.log("4. –ö–æ–ø–∏—Ä—É–π—Ç–µ –¢–û–õ–¨–ö–û –∫–æ–¥, –Ω–µ –≤–µ—Å—å URL");
        console.log("5. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤ Google Cloud Console –Ω–∞—Å—Ç—Ä–æ–µ–Ω redirect URI: http://localhost/");
        console.log("\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!");
      }
    }
    
  } catch (error: any) {
    console.error("\n‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:", error.message || error);
  } finally {
    rl.close();
    await db.disconnect();
  }
}

console.log("Gmail Setup - –†—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞");
console.log("==============================");
console.log("\n–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä—É—á–Ω–æ–π –≤–≤–æ–¥ –∫–æ–¥–∞ –¥–ª—è –æ–±—Ö–æ–¥–∞ –ø—Ä–æ–±–ª–µ–º —Å —Å–µ—Ä–≤–µ—Ä–æ–º.\n");

setup();
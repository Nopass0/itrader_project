import { BybitClient } from "@/bybit/client";

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –æ–ø–ª–∞—Ç—ã –∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ P2P –º–∞—Ä–∫–µ—Ç–µ
 */

async function getP2PMarketData() {
  console.log("=== –ê–Ω–∞–ª–∏–∑ P2P –º–∞—Ä–∫–µ—Ç–∞ Bybit ===\n");
  
  const client = new BybitClient();
  
  try {
    // 1. –ü–æ–¥–∫–ª—é—á–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç
    const accountId = await client.addAccount(
      "ysfXg4bN0vRMwlwYuI",
      "aIxbRqs8oqoDoqwGjEQTFsjDg68WsAxOns4n",
      false,
      "Market Analysis",
    );
    console.log("‚úÖ –ê–∫–∫–∞—É–Ω—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω\n");
    
    // 2. –ò—â–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–∞ –ø—Ä–æ–¥–∞–∂—É USDT –∑–∞ RUB
    console.log("üîç –ü–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π USDT/RUB (–ø—Ä–æ–¥–∞–∂–∞)...");
    
    const sellAds = await client.searchP2PAds(accountId, {
      tokenId: "USDT",
      currencyId: "RUB",
      side: "1", // 1 = –ø—Ä–æ–¥–∞–∂–∞
      page: 1,
      size: 20,
    });
    
    if (sellAds.list && sellAds.list.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${sellAds.list.length} –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ –ø—Ä–æ–¥–∞–∂—É\n`);
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã
      const paymentMethods = new Map<string, number>();
      const priceRange = {
        min: Number.MAX_VALUE,
        max: 0,
        avg: 0,
        total: 0,
      };
      
      console.log("üìä –ê–Ω–∞–ª–∏–∑ –æ–±—ä—è–≤–ª–µ–Ω–∏–π:\n");
      
      sellAds.list.forEach((ad, index) => {
        console.log(`${index + 1}. –ü—Ä–æ–¥–∞–≤–µ—Ü: ${ad.nickName}`);
        console.log(`   –¶–µ–Ω–∞: ${ad.price} RUB`);
        console.log(`   –î–æ—Å—Ç—É–ø–Ω–æ: ${ad.quantity} USDT`);
        console.log(`   –õ–∏–º–∏—Ç—ã: ${ad.minAmount}-${ad.maxAmount} RUB`);
        console.log(`   –ó–∞–≤–µ—Ä—à–µ–Ω–æ —Å–¥–µ–ª–æ–∫: ${ad.completedOrderCount}`);
        console.log(`   –†–µ–π—Ç–∏–Ω–≥: ${ad.completedRate}%`);
        
        // –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ü–µ–Ω–∞–º
        const price = parseFloat(ad.price);
        priceRange.min = Math.min(priceRange.min, price);
        priceRange.max = Math.max(priceRange.max, price);
        priceRange.total += price;
        
        // –ú–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã (–µ—Å–ª–∏ –µ—Å—Ç—å –≤ –æ—Ç–≤–µ—Ç–µ)
        if (ad.payments && Array.isArray(ad.payments)) {
          console.log(`   –ú–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã: ${ad.payments.join(", ")}`);
          ad.payments.forEach(method => {
            paymentMethods.set(method, (paymentMethods.get(method) || 0) + 1);
          });
        }
        
        console.log();
      });
      
      // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ü–µ–Ω–∞–º
      priceRange.avg = priceRange.total / sellAds.list.length;
      console.log("\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ü–µ–Ω:");
      console.log(`   –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è: ${priceRange.min.toFixed(2)} RUB`);
      console.log(`   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è: ${priceRange.max.toFixed(2)} RUB`);
      console.log(`   –°—Ä–µ–¥–Ω—è—è: ${priceRange.avg.toFixed(2)} RUB`);
      console.log(`   –†–∞–∑–±—Ä–æ—Å: ${(priceRange.max - priceRange.min).toFixed(2)} RUB`);
      
      // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–µ—Ç–æ–¥–∞–º –æ–ø–ª–∞—Ç—ã
      if (paymentMethods.size > 0) {
        console.log("\nüí≥ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã:");
        const sortedMethods = Array.from(paymentMethods.entries())
          .sort((a, b) => b[1] - a[1]);
        
        sortedMethods.forEach(([method, count]) => {
          const percentage = (count / sellAds.list.length * 100).toFixed(1);
          console.log(`   ${method}: ${count} –æ–±—ä—è–≤–ª–µ–Ω–∏–π (${percentage}%)`);
        });
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø–µ—Ä–≤–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
      if (sellAds.list.length > 0) {
        console.log("\n\nüìÑ –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä–≤–æ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–∏:");
        const firstAd = sellAds.list[0];
        
        try {
          const adDetail = await client.getP2PAdDetail(accountId, firstAd.id);
          console.log(`\n–û–±—ä—è–≤–ª–µ–Ω–∏–µ ID: ${adDetail.id}`);
          console.log(`–ü—Ä–æ–¥–∞–≤–µ—Ü: ${adDetail.nickName}`);
          console.log(`–°—Ç–∞—Ç—É—Å: ${adDetail.status === "1" ? "–ê–∫—Ç–∏–≤–Ω–æ" : "–ù–µ–∞–∫—Ç–∏–≤–Ω–æ"}`);
          console.log(`–°–æ–∑–¥–∞–Ω–æ: ${new Date(parseInt(adDetail.createTime)).toLocaleString()}`);
          
          if (adDetail.tradeMethods && adDetail.tradeMethods.length > 0) {
            console.log("\n–ú–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã:");
            adDetail.tradeMethods.forEach(method => {
              console.log(`- ${method.payType}`);
              if (method.account) console.log(`  –ê–∫–∫–∞—É–Ω—Ç: ${method.account}`);
              if (method.bankName) console.log(`  –ë–∞–Ω–∫: ${method.bankName}`);
            });
          }
          
          console.log(`\n–ö–æ–º–∏—Å—Å–∏–∏:`);
          console.log(`  –ú–µ–π–∫–µ—Ä: ${adDetail.makerFee}`);
          console.log(`  –¢–µ–π–∫–µ—Ä: ${adDetail.takerFee}`);
          
        } catch (error: any) {
          console.log("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:", error.message);
        }
      }
      
    } else {
      console.log("‚ùå –û–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
    }
    
    // 3. –ò—â–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–∞ –ø–æ–∫—É–ø–∫—É
    console.log("\n\nüîç –ü–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π USDT/RUB (–ø–æ–∫—É–ø–∫–∞)...");
    
    const buyAds = await client.searchP2PAds(accountId, {
      tokenId: "USDT",
      currencyId: "RUB",
      side: "0", // 0 = –ø–æ–∫—É–ø–∫–∞
      page: 1,
      size: 10,
    });
    
    if (buyAds.list && buyAds.list.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${buyAds.list.length} –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ –ø–æ–∫—É–ø–∫—É\n`);
      
      buyAds.list.slice(0, 5).forEach((ad, index) => {
        console.log(`${index + 1}. –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: ${ad.nickName}`);
        console.log(`   –¶–µ–Ω–∞: ${ad.price} RUB`);
        console.log(`   –ù—É–∂–Ω–æ: ${ad.quantity} USDT`);
        console.log(`   –õ–∏–º–∏—Ç—ã: ${ad.minAmount}-${ad.maxAmount} RUB`);
        console.log();
      });
    }
    
    // 4. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    console.log("\n\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è:");
    
    if (sellAds.list && sellAds.list.length > 0) {
      const avgPrice = sellAds.list.reduce((sum, ad) => sum + parseFloat(ad.price), 0) / sellAds.list.length;
      const competitivePrice = (avgPrice * 0.995).toFixed(2); // –ù–∞ 0.5% –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ
      
      console.log(`1. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Ü–µ–Ω–∞: ${competitivePrice} RUB (–Ω–∞ 0.5% –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ)`);
      console.log(`2. –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑: 500-1000 RUB`);
      console.log(`3. –í—Ä–µ–º—è –Ω–∞ –æ–ø–ª–∞—Ç—É: 15 –º–∏–Ω—É—Ç`);
      console.log(`4. –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã:`);
      console.log(`   - –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ (–°–±–µ—Ä–±–∞–Ω–∫, –¢–∏–Ω—å–∫–æ—Ñ—Ñ)`);
      console.log(`   - –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏ (–ÆMoney, QIWI)`);
    }
    
  } catch (error: any) {
    console.error("\n‚ùå –û—à–∏–±–∫–∞:", error.message);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
async function monitorCompetitors() {
  console.log("\n\n=== –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ ===\n");
  
  const client = new BybitClient();
  const accountId = await client.addAccount(
    "ysfXg4bN0vRMwlwYuI",
    "aIxbRqs8oqoDoqwGjEQTFsjDg68WsAxOns4n",
    false,
  );
  
  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Ç–æ–ø –ø—Ä–æ–¥–∞–≤—Ü–æ–≤
  const topSellers = await client.searchP2PAds(accountId, {
    tokenId: "USDT",
    currencyId: "RUB",
    side: "1",
    page: 1,
    size: 5,
  });
  
  if (topSellers.list && topSellers.list.length > 0) {
    console.log("üèÜ –¢–æ–ø-5 –ø—Ä–æ–¥–∞–≤—Ü–æ–≤:");
    
    topSellers.list.forEach((seller, index) => {
      console.log(`\n${index + 1}. ${seller.nickName}`);
      console.log(`   –¶–µ–Ω–∞: ${seller.price} RUB`);
      console.log(`   –ó–∞–≤–µ—Ä—à–µ–Ω–æ —Å–¥–µ–ª–æ–∫: ${seller.completedOrderCount}`);
      console.log(`   –†–µ–π—Ç–∏–Ω–≥: ${seller.completedRate}%`);
      console.log(`   –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —Ä–µ–ª–∏–∑–∞: ${seller.avgReleaseTime} –º–∏–Ω`);
      console.log(`   –û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤: ${seller.totalVolume}`);
      console.log(`   –†–∞–Ω–≥ –ø–æ –æ–±—ä–µ–º—É: #${seller.totalVolumeRank}`);
    });
  }
}

// –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞
getP2PMarketData()
  .then(() => monitorCompetitors())
  .then(() => {
    console.log("\n\n‚úÖ –ê–Ω–∞–ª–∏–∑ –º–∞—Ä–∫–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω!");
    process.exit(0);
  })
  .catch((error) => {
    console.error("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error);
    process.exit(1);
  });
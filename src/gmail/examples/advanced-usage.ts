/**
 * –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Gmail –º–æ–¥—É–ª—è
 */

import { GmailManager, EmailParser } from "../index";
import path from "path";
import fs from "fs/promises";

async function advancedExample() {
  console.log("üöÄ Gmail API - –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø—Ä–∏–º–µ—Ä\n");

  // 1. –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã
  const manager = await GmailManager.fromCredentialsFile(
    path.join(__dirname, "../../../credentials.json"),
    {
      tokensDir: "./data/gmail-tokens",
      autoSaveTokens: true,
    }
  );

  await manager.initialize();

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã
  const loadedCount = await manager.loadAllAccounts();
  console.log(`üì• –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${loadedCount} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤\n`);

  // –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π
  if (loadedCount === 0) {
    console.log("–î–æ–±–∞–≤—å—Ç–µ –∞–∫–∫–∞—É–Ω—Ç:");
    await manager.addAccountInteractive();
  }

  // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç
  const accounts = manager.getAccounts();
  if (accounts.length === 0) {
    console.log("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤");
    return;
  }

  const email = accounts[0].email;
  console.log(`üìß –†–∞–±–æ—Ç–∞–µ–º —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º: ${email}\n`);

  // 2. –ü–∞—Ä—Å–µ—Ä –ø–∏—Å–µ–º –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
  const parser = new EmailParser();

  // 3. –ò—â–µ–º –ø–ª–∞—Ç–µ–∂–Ω—ã–µ –ø–∏—Å—å–º–∞
  console.log("üí≥ –ü–æ–∏—Å–∫ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –ø–∏—Å–µ–º:");
  
  // –ò—â–µ–º –ø–∏—Å—å–º–∞ –æ—Ç –±–∞–Ω–∫–æ–≤ –∏ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
  const bankEmails = await manager.getEmails(email, {
    query: "from:(sberbank OR tinkoff OR alfa-bank OR vtb OR paypal OR qiwi)",
    maxResults: 20,
  });

  const paymentEmails = parser.extractPaymentEmails(bankEmails.messages);
  console.log(`–ù–∞–π–¥–µ–Ω–æ ${paymentEmails.length} –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –ø–∏—Å–µ–º:\n`);

  paymentEmails.forEach((receipt, index) => {
    console.log(`${index + 1}. –ü–ª–∞—Ç–µ–∂ –æ—Ç ${receipt.sender || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}`);
    console.log(`   –î–∞—Ç–∞: ${receipt.date?.toLocaleString()}`);
    if (receipt.amount) {
      console.log(`   –°—É–º–º–∞: ${receipt.amount.toString()} —Ä—É–±`);
    }
    if (receipt.transactionId) {
      console.log(`   ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${receipt.transactionId}`);
    }
    if (receipt.pdfAttachment) {
      console.log(`   üìé PDF —á–µ–∫: ${receipt.pdfAttachment.filename}`);
    }
    console.log();
  });

  // 4. –°–∫–∞—á–∏–≤–∞–µ–º PDF —á–µ–∫–∏
  console.log("üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ PDF —á–µ–∫–æ–≤:");
  const receiptsDir = "./data/receipts";
  await fs.mkdir(receiptsDir, { recursive: true });

  let downloadedCount = 0;
  for (const receipt of paymentEmails) {
    if (receipt.pdfAttachment) {
      const filename = `receipt_${receipt.email.id}_${receipt.pdfAttachment.filename}`;
      const filePath = path.join(receiptsDir, filename);

      try {
        await manager.downloadPdfToFile(
          email,
          receipt.email.id,
          receipt.pdfAttachment.id,
          filePath
        );
        downloadedCount++;
        console.log(`‚úÖ –°–∫–∞—á–∞–Ω: ${filename}`);
      } catch (error: unknown) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è ${filename}:`, error);
      }
    }
  }

  console.log(`\nüìä –°–∫–∞—á–∞–Ω–æ ${downloadedCount} PDF —á–µ–∫–æ–≤ –≤ ${receiptsDir}`);

  // 5. –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–∏—Å–µ–º –ø–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è–º
  console.log("\nüìä –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è–º:");
  const grouped = parser.groupBySender(bankEmails.messages);

  grouped.forEach((messages, sender) => {
    console.log(`\n${sender}: ${messages.length} –ø–∏—Å–µ–º`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –ø–∏—Å—å–º–∞
    messages.slice(0, 3).forEach(msg => {
      console.log(`  - ${msg.subject} (${msg.date?.toLocaleDateString()})`);
    });
  });

  // 6. –†–∞–±–æ—Ç–∞ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–∏—Å—å–º–æ–º
  if (bankEmails.messages.length > 0) {
    console.log("\nüìß –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä–≤–æ–º –ø–∏—Å—å–º–µ:");
    const firstEmail = bankEmails.messages[0];
    
    console.log(`ID: ${firstEmail.id}`);
    console.log(`–û—Ç: ${firstEmail.from}`);
    console.log(`–¢–µ–º–∞: ${firstEmail.subject}`);
    console.log(`–î–∞—Ç–∞: ${firstEmail.date?.toLocaleString()}`);
    console.log(`–ü—Ä–æ—á–∏—Ç–∞–Ω–æ: ${!firstEmail.isUnread}`);
    console.log(`–í–∞–∂–Ω–æ–µ: ${firstEmail.isImportant}`);
    console.log(`–ü–æ–º–µ—á–µ–Ω–æ: ${firstEmail.isStarred}`);

    // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ
    if (firstEmail.isUnread) {
      await manager.markAsRead(email, firstEmail.id);
      console.log("‚úÖ –ü–æ–º–µ—á–µ–Ω–æ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ");
    }

    // –°–∫–∞—á–∏–≤–∞–µ–º –≤—Å–µ PDF –∏–∑ –ø–∏—Å—å–º–∞
    if (firstEmail.attachments && firstEmail.attachments.length > 0) {
      console.log(`\nüìé –í–ª–æ–∂–µ–Ω–∏—è (${firstEmail.attachments.length}):`);
      
      const pdfAttachments = await manager.downloadPdfAttachments(
        email,
        firstEmail.id
      );

      for (const pdf of pdfAttachments) {
        console.log(`- ${pdf.filename} (${pdf.size} –±–∞–π—Ç)`);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
        if (pdf.data) {
          const pdfPath = path.join(receiptsDir, `detail_${pdf.filename}`);
          const buffer = Buffer.from(pdf.data, "base64");
          await fs.writeFile(pdfPath, buffer);
          console.log(`  ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω: ${pdfPath}`);
        }
      }
    }
  }

  // 7. –ü–æ–∏—Å–∫ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
  console.log("\nüìÑ –ü–∞–≥–∏–Ω–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:");
  let pageToken: string | undefined;
  let totalMessages = 0;
  let pageCount = 0;

  do {
    const result = await manager.getEmails(email, {
      maxResults: 10,
      pageToken,
      after: "2024/1/1",
    });

    totalMessages += result.messages.length;
    pageCount++;
    
    console.log(`–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageCount}: ${result.messages.length} –ø–∏—Å–µ–º`);
    
    pageToken = result.nextPageToken;
  } while (pageToken && pageCount < 3); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 3 —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞

  console.log(`\n–í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${totalMessages} –ø–∏—Å–µ–º`);
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è OAuth flow —á–µ—Ä–µ–∑ –≤–µ–±
async function webAuthExample() {
  console.log("\nüåê –ü—Ä–∏–º–µ—Ä –≤–µ–±-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:");
  
  // –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä
  const manager = await GmailManager.fromCredentialsFile(
    path.join(__dirname, "../../../credentials.json")
  );

  // –ü–æ–ª—É—á–∞–µ–º URL –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const authUrl = manager.getAuthUrl("my-state-123");
  console.log("\nURL –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:");
  console.log(authUrl);
  
  console.log("\n–ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –∫–æ–¥. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ —Ç–∞–∫:");
  console.log("const email = await manager.addAccountWithAuthCode('–ø–æ–ª—É—á–µ–Ω–Ω—ã–π-–∫–æ–¥');");
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–º–µ—Ä
if (require.main === module) {
  advancedExample()
    .then(() => webAuthExample())
    .then(() => console.log("\n‚úÖ –ü—Ä–∏–º–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω"))
    .catch((error: unknown) => {
      console.error("‚ùå –û—à–∏–±–∫–∞:", error);
      process.exit(1);
    });
}
/**
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤ Gate.io –º–æ–¥—É–ª—è
 */

import { GateAccountManager } from '../index';

async function demonstrateNewMethods() {
  const manager = new GateAccountManager({
    cookiesDir: './data/gate-cookies',
    autoSaveCookies: true
  });

  await manager.initialize();

  const email = 'user@example.com';
  const password = 'password123';

  try {
    // –î–æ–±–∞–≤–ª—è–µ–º –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º –∞–∫–∫–∞—É–Ω—Ç
    await manager.addAccount(email, password);
    console.log('‚úÖ –ê–∫–∫–∞—É–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω');

    // 1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–ª–∞–Ω—Å–∞ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    console.log('\nüí∞ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–ª–∞–Ω—Å–∞:');
    const newBalance = 50000; // 50,000 RUB
    await manager.setBalance(email, newBalance);
    console.log(`   –ë–∞–ª–∞–Ω—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${newBalance} RUB`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
    const balance = await manager.getBalance(email);
    console.log(`   –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${balance.balance} RUB`);

    // 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ (—Å—Ç–∞—Ç—É—Å 4)
    console.log('\n‚è≥ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏:');
    const pendingTransactions = await manager.getPendingTransactions(email);
    console.log(`   –ù–∞–π–¥–µ–Ω–æ ${pendingTransactions.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 4`);
    
    pendingTransactions.forEach(tx => {
      console.log(`   - ID: ${tx.id}, –°—É–º–º–∞: ${tx.amount.trader['643']} RUB`);
    });

    // 3. –ü–æ–∏—Å–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ ID
    console.log('\nüîç –ü–æ–∏—Å–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ ID:');
    const searchId = '12345'; // –ü—Ä–∏–º–µ—Ä ID
    const foundTransaction = await manager.searchTransactionById(email, searchId);
    
    if (foundTransaction) {
      console.log(`   –ù–∞–π–¥–µ–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ${searchId}:`);
      console.log(`   - –°—Ç–∞—Ç—É—Å: ${foundTransaction.status}`);
      console.log(`   - –°—É–º–º–∞: ${foundTransaction.amount.trader['643']} RUB`);
      console.log(`   - –ú–µ—Ç–æ–¥: ${foundTransaction.method.label}`);
    } else {
      console.log(`   –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ${searchId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
    }

    // 4. –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä: –ø–æ–∏—Å–∫ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞
    console.log('\nüîÑ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä:');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ–∂–∏–¥–∞—é—â–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    const pending = await manager.getPendingTransactions(email);
    
    if (pending.length > 0) {
      const firstPending = pending[0];
      console.log(`   –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ ${firstPending.id}`);
      
      // –ò—â–µ–º —ç—Ç—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ ID –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
      const verified = await manager.searchTransactionById(email, firstPending.id.toString());
      
      if (verified) {
        console.log('   ‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫');
        
        // –ü—Ä–∏–Ω–∏–º–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        await manager.acceptTransaction(email, verified.id.toString());
        console.log('   ‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø—Ä–∏–Ω—è—Ç–∞ –≤ —Ä–∞–±–æ—Ç—É');
      }
    }

    // 5. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
    console.log('\nüîß –ü—Ä—è–º–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞:');
    const client = manager.getClient(email);
    
    // –ú–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã –Ω–∞–ø—Ä—è–º—É—é
    const directPending = await client.getPendingTransactions();
    console.log(`   –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤: ${directPending.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –æ–∂–∏–¥–∞–Ω–∏–∏`);

    // –¢–∞–∫–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –≤—Ö–æ–¥–æ–º
    const result = await manager.withAutoRelogin(email, async (client) => {
      const pending = await client.getPendingTransactions();
      const balance = await client.getBalance('RUB');
      
      return {
        pendingCount: pending.length,
        balance: balance.balance.toString()
      };
    });
    
    console.log(`   –†–µ–∑—É–ª—å—Ç–∞—Ç —Å auto-relogin:`);
    console.log(`   - –û–∂–∏–¥–∞—é—â–∏—Ö: ${result.pendingCount}`);
    console.log(`   - –ë–∞–ª–∞–Ω—Å: ${result.balance} RUB`);

  } catch (error: unknown) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
if (require.main === module) {
  demonstrateNewMethods()
    .then(() => console.log('\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞'))
    .catch((error: unknown) => console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error));
}